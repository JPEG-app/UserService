apiVersion: v1
kind: Secret 
metadata:
  name: db-secret
type: Opaque
---
apiVersion: v1
kind: Secret 
metadata:
  name: user-service-secret
type: Opaque
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-config
data:
  POSTGRES_DB: "users" 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-config
data:
  NODE_ENV: "production"
  PORT: "3001"
  DB_HOST: "db-service" 
  DB_NAME: "users"      
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
      - name: postgres
        image: postgres:15 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        envFrom:
        - secretRef:
            name: db-secret 
        - configMapRef:
            name: db-config 
        resources:
          requests:
            cpu: "250m" 
            memory: "512Mi" 
          limits: 
            cpu: "500m"
            memory: "1Gi"
        volumeMounts:
        - name: db-storage
          mountPath: /var/lib/postgresql/data
          subPath: postgres-data
        - name: db-init-scripts-volume 
          mountPath: /docker-entrypoint-initdb.d 
          readOnly: true
      volumes:
      - name: db-storage
        persistentVolumeClaim:
          claimName: db-pvc
      - name: db-init-scripts-volume 
        configMap:
          name: db-init-scripts-cm 
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
spec:
  selector:
    app: postgres-db
  ports:
  - protocol: TCP
    port: 5432  
    targetPort: 5432  
  type: ClusterIP 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: dgeorgiev0348/user-service:latest
        imagePullPolicy: Always 
        ports:
        - containerPort: 3001 
        resources: 
          requests:
            cpu: "100m"   
            memory: "128Mi" 
          limits: 
            cpu: "250m"
            memory: "256Mi"
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: DB_HOST
        - name: DB_NAME 
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: DB_NAME
        - name: DB_USER 
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: POSTGRES_USER
        - name: DB_PASSWORD 
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: POSTGRES_PASSWORD
        - name: JWT_SECRET 
          valueFrom:
            secretKeyRef:
              name: user-service-secret
              key: JWT_SECRET
---
apiVersion: v1
kind: Service
metadata:
  name: user-service-service
spec:
  selector:
    app: user-service
  ports:
  - protocol: TCP
    port: 3001     
    targetPort: 3001
  type: NodePort 
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-service-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-service-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70