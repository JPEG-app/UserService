apiVersion: v1
kind: Secret
metadata:
  name: db-secret
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: user-service-secret
type: Opaque
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-config
data:
  POSTGRES_DB: "users"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-config
data:
  NODE_ENV: "production"
  PORT: "3001"
  DB_HOST: "db-service"
  DB_NAME: "users"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        envFrom:
        - secretRef:
            name: db-secret
        - configMapRef:
            name: db-config
        volumeMounts:
        - name: db-storage
          mountPath: /var/lib/postgresql/data
        - name: db-init-scripts
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
      volumes:
      - name: db-storage
        persistentVolumeClaim:
          claimName: db-pvc
      - name: db-init-scripts
        hostPath:
          path: /home/gushtera/Documents/jpeg-app/user-service/db
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
spec:
  selector:
    app: postgres-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: dgeorgiev0348/user-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: POSTGRES_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: POSTGRES_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: user-service-secret
              key: JWT_SECRET
---
apiVersion: v1
kind: Service
metadata:
  name: user-service-service
spec:
  selector:
    app: user-service
  ports:
  - protocol: TCP
    port: 3001
    targetPort: 3001
  type: NodePort
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-service-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-service-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

# kubectl create secret tls gateway-tls-secret --cert="./gateway.local+3.pem" --key="./gateway.local+3-key.pem" -n default
# kubectl create secret generic user-service-secret --from-literal=JWT_SECRET="c478f4991a75562c9eb69af0b6dc45a163bbdf83b997be06e3cff37d93021e1a65c37823e6a1112dec4ffede54d7fda0bdda4f08074b48e76b992bc04a92276af4b83082a55d08ae2ff45fd817cbf2806886b8f4920fe0f879add10afb9282ac6d80a5f6f45ecc29b284d190f0d038f6313ca14b8e68984614002b546265488c1853f7b0494f1b6b5d512d4b404d56bc4c7bb53a8a8ca7e713d60d9f1f5f7ea3ef1e047a880bc0e3a245ebcc9d5f1eebcce6318e99e9a1583da9f3c2a8809953518b8a349d0148175f50489b2783d423704c5cb9432cc8600348bf848eaccf96da9f2b80ee49cac8b2c3710f340e45b74439a4be6014d24f4ba375cbdded51cf"
# kubectl create secret generic db-secret --from-literal=POSTGRES_USER="postgres" --from-literal=POSTGRES_PASSWORD="password"