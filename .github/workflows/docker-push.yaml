name: Docker Push

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: users
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        volumes:
          - ./db:/docker-entrypoint-initdb.d
    env:
      DATABASE_URL: postgres://postgres:password@localhost:5432/users

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Set up Docker Buildx
        if: success()
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image for user-service
        if: success()
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/user-service:cache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/user-service:cache,mode=max

      # - name: Build and push PostgreSQL image
      #   if: success()
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./db
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/user-service-db:${{ github.sha }}
      #     cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/user-service-db:cache
      #     cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/user-service-db:cache,mode=max
